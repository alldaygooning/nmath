plugins {
    id 'application'
    id 'java-library'
}

group = 'nikita'
version = '1.0.5'

repositories {
    mavenCentral()

    maven {
        url = uri('https://oss.sonatype.org/content/repositories/snapshots')
    }

    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }

    maven {
        url = uri('https://packages.orekit.org/repository/maven-snapshots/')
        mavenContent {
            snapshotsOnly()
        }
    }

    maven {
        url = uri('https://oss.sonatype.org/content/repositories/snapshots')
        mavenContent {
            snapshotsOnly()
        }
    }
}

dependencies {
    implementation("org.matheclipse:matheclipse-core:3.1.0-SNAPSHOT")
    implementation 'com.google.guava:guava:30.1.1-jre'
    
	// https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-api
	testImplementation("org.junit.jupiter:junit-jupiter-api:5.11.0")
    // https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-engine
	testImplementation("org.junit.jupiter:junit-jupiter-engine:5.11.0")
	testImplementation("org.junit.jupiter:junit-jupiter-params:5.11.0")
	
	// https://mvnrepository.com/artifact/org.json/json
	implementation("org.json:json:20250107")
	
	// https://mvnrepository.com/artifact/ch.obermuhlner/big-math
	implementation("ch.obermuhlner:big-math:2.3.2")
	
	implementation 'org.apache.logging.log4j:log4j-api:2.24.0'
    implementation 'org.apache.logging.log4j:log4j-core:2.24.0'
}

test {
    useJUnitPlatform()
    testLogging {
        showStandardStreams = true
    }
}


 application {
    mainClass = 'nikita.Main'
 }
 
 run {
    systemProperty 'log4j.configurationFile', 
        file('/home/gangster/Desktop/Homework (͠≖ ͜ʖ͠≖)/Методы Оптимизации/nmath/src/main/resources/log4j.properties').absolutePath
}